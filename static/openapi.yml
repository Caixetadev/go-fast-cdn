openapi: "3.0.0"
info:
  version: 0.0.1
  title: Go-Fast CDN
  description: A simple and fast CDN written in Go
  contact:
    name: Kevin Alex Nielsen
    email: kevinanielsen@outlook.com
    url: http://github.com/kevinanielsen/go-fast-cdn
  license:
    name: License Name
    url: http://example.com/license-url
paths:
  /download/image/{fileName}:
    get:
      summary: Retrieve the image you want to access from the CDN.
      description: Retrieve the image requested from the CDN.
      operationId: receiveImage
      parameters:
        - name: fileName
          in: query
          description: The name of the image you want to access.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: You have recieved the requested content from the CDN.
        "304":
          description: Redirect to the requested content.
  /download/doc/{fileName}:
    get:
      summary: Retrieve the doc you want to access from the CDN.
      description: Retrieve the doc requested from the CDN.
      operationId: receiveDoc
      parameters:
        - name: fileName
          in: query
          description: The name of the doc you want to access.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: You have recieved the requested content from the CDN.
        "304":
          description: Redirect to the requested content.
  /api/cdn/upload/image/:
    post:
      description: Upload an image to the CDN. The accepted MIME types are image/jpeg, image/png, image/jpg, image/webp, image/gif, and image/bmp.
      summary: Upload image to CDN
      operationId: uploadImage
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "200":
          description: You have successfully uploaded the image.
          content:
            application/json:
              schema:
                type: object
                properties:
                  file_url:
                    type: string
                    description: The URL of the uploaded image.
        "400":
          description: Invalid file-type or lack of file in formData.
